AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  DomainName:
    Type: String
  HostedZoneId:
    Type: String

Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub '*.${DomainName}'
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId

  CloudFrontFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: ipv6-proxy
      FunctionConfig:
        Comment: ipv6 proxy
        Runtime: cloudfront-js-2.0
      FunctionCode: |
        import cf from 'cloudfront';
        async function handler(event) {
            console.log(JSON.stringify(event))
            const hostValue = event.request.headers.host.value.toLowerCase();
            const target = hostValue.split('.')[0];
            const endpoint = target.replace(/--/g, '.');
            console.log(JSON.stringify({ message: 'changing origin', newOrigin: endpoint }));
            cf.updateRequestOrigin({
                domainName: endpoint,
            });
            return event.request;
        }
      AutoPublish: true
  ProxyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: ipv6 proxy
        HttpVersion: http2
        Aliases:
          - !Ref DomainName
          - !Sub '*.${DomainName}'
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
        Origins:
          - Id: proxy
            DomainName: ec2.us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: proxy
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # caching disabled
          OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3 # AllViewer
          AllowedMethods: [GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE]
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt CloudFrontFunction.FunctionARN

  SiteDnsRecordIpv6:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: AAAA
      AliasTarget:
        DNSName: !Sub ${ProxyDistribution.DomainName}
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !Ref DomainName
      HostedZoneId: !Ref HostedZoneId
  SiteWildcardDnsRecordIpv6:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: AAAA
      AliasTarget:
        DNSName: !Sub ${ProxyDistribution.DomainName}
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !Sub '*.${DomainName}'
      HostedZoneId: !Ref HostedZoneId
  SiteDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      AliasTarget:
        DNSName: !Sub ${ProxyDistribution.DomainName}
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !Ref DomainName
      HostedZoneId: !Ref HostedZoneId
  SiteWildcardDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      AliasTarget:
        DNSName: !Sub ${ProxyDistribution.DomainName}
        HostedZoneId: Z2FDTNDATAQYW2
      Name: !Sub '*.${DomainName}'
      HostedZoneId: !Ref HostedZoneId

